Material "DirectionalLightPass"
{
    Shader
    {
        //Remove this module once there are light volumes
        VertexModule "SetGLPosition" 0
        {
            gl_Position = vec4(a_Position,1.0);
        }
        VertexModule "SetTexCoords" 1
        {
            o_TexCoord = a_TexCoord;
        }
        FragmentModule "SetColor" 0
        {
            vec4  Normal     = texture(u_FragNormal,o_TexCoord);
            float ndotl      = max(dot(Normal.xyz,u_Lights[0].Direction.xyz),0.0);

            vec4 Diffuse     = texture(u_FragColor,o_TexCoord);
            vec3 OutColor    = ndotl * Diffuse.xyz;

            vec4 sColor = vec4(OutColor,Diffuse.a);
        }
        Requires
        {
            //Uniforms
            ObjectData
            RenderData

            //Attributes
            a_Position
            a_TexCoord
        }
        VertexOutputs
        {
            a_TexCoord
        }
        TextureMaps
        {
            u_FragColor
            u_FragNormal
            u_FragPosition
        }
        Outputs
        {
            f_Color
        }
    }
}
