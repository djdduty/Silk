Material "PointLightPass"
{
    Shader
    {
        //Remove this module once there are light volumes
        VertexModule "SetGLPosition" 0
        {
            gl_Position = vec4(a_Position,1.0);
        }
        VertexModule "SetTexCoords" 1
        {
            o_TexCoord = a_TexCoord;
        }
        FragmentModule "SetColor" 0
        {
            vec4 Diffuse  = texture(u_FragColor   ,o_TexCoord);
            vec4 Normal   = texture(u_FragNormal  ,o_TexCoord);
            vec4 Position = texture(u_FragPosition,o_TexCoord);
            
            float Fac = 0.0;
            float Dist = length(u_Lights[0].Position.xyz - Position.xyz);
            if(Dist < 25.0) Fac = Dist / 25.0;
            vec4 sColor = Diffuse * Fac;
        }
        Requires
        {
            //Uniforms
            ObjectData
            RenderData
            
            //Attributes
            a_Position
            a_TexCoord
        }
        VertexOutputs
        {
            a_TexCoord
        }
        TextureMaps
        {
            u_FragColor
            u_FragNormal
            u_FragPosition
        }
        Outputs
        {
            f_Color
        }
    }
}